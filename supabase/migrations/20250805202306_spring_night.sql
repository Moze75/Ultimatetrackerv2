/*
  # Cr√©ation du bucket sorts pour les fichiers de sorts D&D

  1. Nouveau bucket
    - Cr√©ation d'un bucket 'sorts' pour stocker les fichiers de sorts
    - Acc√®s public en lecture pour permettre le chargement des sorts
    - Acc√®s en √©criture pour les utilisateurs authentifi√©s

  2. S√©curit√©
    - Acc√®s public en lecture
    - Acc√®s en √©criture limit√© aux utilisateurs authentifi√©s
    - Politiques RLS appropri√©es
*/

-- Supprimer le bucket s'il existe d√©j√† (pour le recr√©er proprement)
DELETE FROM storage.buckets WHERE id = 'sorts';

-- Cr√©ation du bucket pour les sorts
INSERT INTO storage.buckets (id, name, public)
VALUES ('sorts', 'sorts', true);

-- Supprimer les anciennes politiques s'elles existent
DROP POLICY IF EXISTS "Acc√®s public aux sorts" ON storage.objects;
DROP POLICY IF EXISTS "Les utilisateurs authentifi√©s peuvent g√©rer les sorts" ON storage.objects;

-- Politique pour permettre l'acc√®s public en lecture
CREATE POLICY "Public read access to sorts"
ON storage.objects FOR SELECT
TO public
USING (bucket_id = 'sorts');

-- Politique pour permettre aux utilisateurs authentifi√©s de g√©rer les fichiers de sorts
CREATE POLICY "Authenticated users can manage sorts"
ON storage.objects FOR ALL
TO authenticated
USING (bucket_id = 'sorts')
WITH CHECK (bucket_id = 'sorts');

-- V√©rification que le bucket a √©t√© cr√©√©
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM storage.buckets WHERE id = 'sorts'
    ) THEN
        RAISE NOTICE '‚úÖ Bucket "sorts" cr√©√© avec succ√®s';
        RAISE NOTICE '‚úÖ Politiques d''acc√®s configur√©es';
        RAISE NOTICE 'üìÅ Vous pouvez maintenant uploader le fichier "Sorts 2024.md"';
    ELSE
        RAISE WARNING '‚ùå √âchec de la cr√©ation du bucket "sorts"';
    END IF;
END $$;